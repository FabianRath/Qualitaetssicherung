/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rathfab28
 */
public class Fenster extends javax.swing.JDialog {

    /**
     * Creates new form Fenster
     */
    public Fenster(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    Leser leser;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNummerMaschine = new javax.swing.JLabel();
        comboBoxMaschine = new javax.swing.JComboBox<>();
        label250 = new javax.swing.JLabel();
        label500 = new javax.swing.JLabel();
        label1000 = new javax.swing.JLabel();
        labelGroesse = new javax.swing.JLabel();
        comboBoxGramm = new javax.swing.JComboBox<>();
        LabelAvarage = new javax.swing.JLabel();
        labelProzentWaehlen = new javax.swing.JLabel();
        sliderProzent = new javax.swing.JSlider();
        labelAnzahlPacketeProzent = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelNummerMaschine.setText("Bitte die Nummer der Maschine angeben:");

        comboBoxMaschine.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Maschinen 1", "Maschinen 2", "Maschinen 3", "Maschinen 4", "Maschinen 5", "Maschinen 6", "Maschinen 7", "Maschinen 8", "Maschinen 9", "Maschinen 10" }));
        comboBoxMaschine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMaschineActionPerformed(evt);
            }
        });

        label250.setText("Es gibt [...] 250g Reis Packungen");

        label500.setText("Es gibt [...] 500g Reis Packungen");

        label1000.setText("Es gibt [...] 1000g Reis Packungen");

        labelGroesse.setText("Bitte eine Größe wählen:");

        comboBoxGramm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "250g", "500g", "1000g" }));
        comboBoxGramm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxGrammActionPerformed(evt);
            }
        });

        LabelAvarage.setText("Das durschnitts Gewicht beträgt [...]g");

        labelProzentWaehlen.setText("Auf dem Slider einen Prozentwert wählen ");

        sliderProzent.setMaximum(1000);
        sliderProzent.setSnapToTicks(true);
        sliderProzent.setValue(0);
        sliderProzent.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderProzentStateChanged(evt);
            }
        });

        labelAnzahlPacketeProzent.setText("Es gibt [...] Packete mit einer Abweichung die größer ist als  [...]%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(LabelAvarage))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(labelGroesse)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboBoxGramm, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label1000)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(label500)
                                                .addComponent(label250)))
                                        .addComponent(labelNummerMaschine))
                                    .addGap(31, 31, 31)
                                    .addComponent(comboBoxMaschine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(sliderProzent, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(labelAnzahlPacketeProzent))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(labelProzentWaehlen)))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNummerMaschine)
                    .addComponent(comboBoxMaschine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(label250)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label500)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label1000)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGroesse)
                    .addComponent(comboBoxGramm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelAvarage)
                .addGap(35, 35, 35)
                .addComponent(labelProzentWaehlen)
                .addGap(18, 18, 18)
                .addComponent(sliderProzent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelAnzahlPacketeProzent)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxMaschineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMaschineActionPerformed
        leser = new Leser(Integer.toString(comboBoxMaschine.getSelectedIndex()));
        int[] anzahlPackete = leser.anzahlPakete();
        label250.setText("Es gibt " + Integer.toString(anzahlPackete[0]) + " x 250g Reis Packungen");
        label500.setText("Es gibt " + Integer.toString(anzahlPackete[1]) + " x 500g Reis Packungen");
        label1000.setText("Es gibt " + Integer.toString(anzahlPackete[2]) + " x 1000g Reis Packungen");
    }//GEN-LAST:event_comboBoxMaschineActionPerformed

    private void comboBoxGrammActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxGrammActionPerformed
        LabelAvarage.setText(("Das durschnitts Gewicht beträgt ") + Double.toString(leser.getAverage(comboBoxGramm.getSelectedIndex())) + "g");
    }//GEN-LAST:event_comboBoxGrammActionPerformed

    private void sliderProzentStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderProzentStateChanged
        double prozent = sliderProzent.getValue() / 100.0;
        String prozentRounded = "";
        if (String.valueOf(prozent).length() == 4) {
            prozentRounded = String.valueOf(prozent).substring(0, String.valueOf(prozent).length() - 1);
        } else {
            prozentRounded = String.valueOf(prozent);
        }
        if (leser.getpacketeProzent(Double.parseDouble(prozentRounded), comboBoxGramm.getSelectedIndex()) == 1) {
            labelAnzahlPacketeProzent.setText("Es gibt " + leser.getpacketeProzent(Double.parseDouble(prozentRounded), comboBoxGramm.getSelectedIndex()) + ". Packet mit einer Abweichung die größer ist als " + prozentRounded + "%");
        } else {
            labelAnzahlPacketeProzent.setText("Es gibt " + leser.getpacketeProzent(Double.parseDouble(prozentRounded), comboBoxGramm.getSelectedIndex()) + ". Packete mit einer Abweichung die größer ist als " + prozentRounded + "%");
        }
    }//GEN-LAST:event_sliderProzentStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Fenster dialog = new Fenster(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelAvarage;
    private javax.swing.JComboBox<String> comboBoxGramm;
    private javax.swing.JComboBox<String> comboBoxMaschine;
    private javax.swing.JLabel label1000;
    private javax.swing.JLabel label250;
    private javax.swing.JLabel label500;
    private javax.swing.JLabel labelAnzahlPacketeProzent;
    private javax.swing.JLabel labelGroesse;
    private javax.swing.JLabel labelNummerMaschine;
    private javax.swing.JLabel labelProzentWaehlen;
    private javax.swing.JSlider sliderProzent;
    // End of variables declaration//GEN-END:variables
}
